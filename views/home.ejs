<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<link href="https://fonts.googleapis.com/css2?family=Liberation+Mono&display=swap" rel="stylesheet">
<style>
  svg {
    width: 3rem;
    height: 3rem;
    color: black;
  }

  input[type="file"] {
    display: none;
  }


  body {
    font-family: Helvetica;
    box-sizing: border-box;
  }


  .custom-file-upload {
    display: inline-block;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    color: white;
    background-color: #18181b;
    /* Customize color */
    border: 1px solid #007bff;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  /* Hover effect for the label */
  .custom-file-upload:hover {
    background-color: #333333;
    color: #ffffff;
  }

  /* Hide the default file input */
  #file-upload {
    display: none;
  }

  .container1 {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

  }


  .container2 {


    display: grid;

    grid-template-columns: 1fr;
    grid-template-rows: auto auto 1fr;
    margin-right: 10rem;



  }

  .folders {
    grid-column: 1/-1;
    grid-row: 2/-1;
  }


  .empty {
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* align-items: center; */
  }



  .container1 svg {
    width: 12rem;
    height: 12rem;
    color: grey;
    border: transparent;

  }

  dialog svg {
    width: 2rem;
    height: 2rem;
  }

  .container1 {
    color: #2D3748;
  }

  .container1,
  .container2 label {
    border: none;

  }

  .container2 {
    color: #2D3748;
    width: 100%;
    height: 100vh;

  }

  li {
    color: #2D3748;
  }



  /* Base Style */
  .upload-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 12px 24px;
    background-color: #48BB78;
    /* Green */
    color: #FFFFFF;
    /* White text */
    font-size: 16px;
    font-weight: 600;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    /* Subtle shadow for depth */
  }

  .upload-button:hover {
    background-color: #38B2AC;
    /* Teal hover effect */
  }

  .upload-button:focus {
    outline: none;
    box-shadow: 0 0 0 3px #38B2AC;
    /* Focus effect with teal border */
  }

  .upload-button .icon {
    margin-right: 8px;
    font-size: 18px;
    /* Size of the icon */
  }

  .upload-button:disabled {
    background-color: #E2E8F0;
    /* Light gray background for disabled */
    color: #A0AEC0;
    /* Lighter text for disabled */
    cursor: not-allowed;
    box-shadow: none;
    /* No shadow when disabled */
  }


  .file {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr 1fr 1fr;



    grid-column: 1/-1;

    border-bottom: 1px solid #e4e4e7;
    padding: 15px;
    font-size: 16px;
    cursor: pointer;
  }

  .files {

    background-color: #ffffff;
    border: 1px solid #e4e4e7;
    margin-top: 1rem;
    border-radius: 4px;
    margin-right: 2rem;

  }

  a {
    text-decoration: none;
    /* Removes underlining */
    color: inherit;
    /* Inherits color from parent element, or you can set your own color */
    outline: none;
    /* Removes the outline around the link when focused (use cautiously for accessibility) */
  }

  main {
    display: grid;

    grid-template-rows: auto 1fr;
    grid-template-columns: auto 1fr;

    padding-top: 120px;
    width: 100vw;
    height: 100vh;


  }

  #search {
    /* padding: 1rem; */
    /* width: 80%; */
    justify-content: center;
    align-items: center;
    border-radius: 4px;
    border: 1px solid #ffffff;
    width: auto;
    font-size: 1.3rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    margin-left: 1rem;

  }

  #search:focus {
    border: 1px solid grey;
  }

  nav {
    margin: 0;
    padding: 0;
  }

  .search {
    display: flex;
    justify-content: center;
    align-items: center;

  }

  .controls {
    /* grid-row: 2/3; */
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
    flex-wrap: wrap;
  }

  nav {
    grid-column: 1/2;
    grid-row: 1/-1;
    margin-right: 5rem;

  }

  .folders {
    display: flex;
    justify-content: center;
    flex-direction: column;
    gap: 2rem;
    margin-left: 4rem;
    margin-top: 1rem;

  }

  .folder {
    display: flex;
    gap: 1rem;
    flex: 1;
    align-items: center;
  }

  .folder:hover {
    background-color: #f0f8ff;
  }

  .dialog {
    top: 50%;
    left: 50%;
    -webkit-transform: translateX(-50%) translateY(-50%);
    -moz-transform: translateX(-50%) translateY(-50%);
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
  }


  #search:focus {
    border: 1px solid blue;
  }

  #create-folder {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    border-radius: 4px;
    background-color: #ffffff;
    color: black;
    border: 1px solid #e4e4e7;
  }

  #create-folder:hover {
    background-color: #e0e0e0;
  }

  dialog svg {
    color: #a0c4ff;
  }

  dialog {
     width: 40vw; 
     height: 40vh; 
    padding: 2rem;
    max-height: 60vh;
    border-radius: 12px;
    border: 2px solid #e0e0e0;
  }

  .create-folder {

    align-items: center;
    gap: 10px
  }

  .create-folder {
    font-size: 1.2rem;
  }

  .close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 0.8rem;
    background-color: transparent;
    border: none;
    cursor: pointer;
  }

  .close svg {
    color: black;
  }

  #input-folder {
    padding: 8px;
    font-size: 1.1rem;
    border-radius: 6px;
    border: 1px solid green;
    width: 100%;
  }

  .dialog-controls {
    display: flex;
    gap: 1rem;
    position: absolute;
    bottom: 10px;
    right: 10px;
  }

  .dialog-controls button {
    padding: 10px 20px;
    border-radius: 6px;
    font-size: 16px;
    font-weight: 500;
  }

  .dialog-controls button[type='submit'] {
    background-color: #2C3E50;
    color: white;
  }

  .dialog-controls button[type='submit']:hover {
    background-color: #95A5A6;
  }

  button:disabled {
    background-color: #d6d6d6;
    /* Light gray for disabled state */
    color: #9c9c9c;
    /* Subdued text color */
    cursor: not-allowed;
    /* Indicates unclickable state */
    opacity: 0.6;
    /* Makes it visually less prominent */
  }

  .file:hover {
    background-color: #e0e0e0;
  }

  .file {
    transition: background-color 0.2s ease;
    /* cursor:pointer */
  }

  .search svg {
    width: 2rem;
    height: 2rem;
    ;
    /* position: absolute;
    top: 5px;
    left: -35px; */
    margin-left: 5px;
  }

  #create-folder-form {
    margin-top: 1rem;
  }

  i {
    font-size: 3rem;
  }

  #file-preview {
    grid-column: 2/-1;
    grid-row: 1/-1;
    background-color: #18181b;
    overflow-y: auto;

  }

  .file-info {
    display: flex;
    background-color: #242321;
    gap: 1rem;
    padding: 1rem;
    position: fixed;
    width: 100%;
  }

  .file-content {
    padding: 2rem;
    /* word-wrap: break-word; */
    /* white-space: pre-wrap; */
    font-family: 'Liberation Mono', monospace;
  }

  iframe {
    width: 100%;
    /* Make the iframe take the full width of its container */
    height: 100vh;
    /* 90% of the viewport height */
    border: none;
    /* Remove the border */
    margin-top: 5rem;
  }

  .sharing{
    display:flex;
    justify-content: space-between;
    align-items: center;

  }
  .sharing p {
    font-size: 1.6rem;
    font-weight: 600
  }

  .sharing svg {
    color: white;
    width: 2rem;
    height: 2rem;
    font-weight: 800;
  }

  .share-btn {
    margin-right: 2rem;
    /* margin: 0; */
    height: fit-content;
    padding: 0.5rem 1rem;
    color: white;
    background-color: black;;
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
    font-family: Nimbus Sans;
    border-radius: 8px;
  }


  .share-folder {
  font-family: Arial, sans-serif;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  padding: 20px;
  width: 250px;
}

label {
  display: block;
  margin-bottom: 8px;
  font-weight: bold;
}

select {
  width: 85%;
  padding: 12px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: #f9f9f9;
}

select:focus {
  outline: none;
  border-color: #007BFF;
  background-color: #fff;
}

.copy{
    all:unset;
    cursor: pointer;
}

#link-input{
    width: 90%;
    padding: 0.5rem 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    border: 2px solid #e8e8eb;
    border-radius: 8px;
}

#link-input:focus{
    border: 1px solid black;
}

.link{
    display:flex;
    flex-direction: column;
    margin-top: 2rem
}

.link svg{
    color: black
}

ul, ol {
  list-style: none;
  padding: 0;
  margin: 0;
}

li {
  /* list-style: none;
  display:flex;
  align-items: center;
  gap: 10px; */

}

ol,ul{
  /* display:flex;
  flex-direction: column;
  gap: 1rem; */

}


#generate{

    margin-right: 2rem;
    /* margin: 0; */
    height: fit-content;
    padding: 0.5rem 1rem;
    color: white;
    background-color: black;;
    border: none;
    cursor: pointer;
    font-size: 1.1rem;
    font-family: Nimbus Sans;
    border-radius: 8px;
    font-weight: 700;

}

ul,li {
  padding: 0;
  margin: 0;
}

.folder-div{
  display:flex;
  justify-content: center;
  align-items: center;
}

</style>


<body>



  <main>

    <nav>
      <ol class="folders">
        <% folders.forEach(function(folder) { %>
          <li class="folder">
            <!-- Folder item -->
            <div class="folder-div">
              <!-- Only add toggle button if the folder has children (subfolders) -->
              <% if (folder.children && folder.children.length > 0) { %>
                <button class="toggle-btn" data-id="<%= folder.id %>">+</button>
              <% } %>
      
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15 13.5H9m4.06-7.19-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z" />
              </svg>
      
              <a href="/folder/<%= folder.id %>" class="folder-link" data-id="<%= folder.id %>"><%= folder.name %></a>
            </div>
      
            <% if (folder.children && folder.children.length > 0) { %>
              <!-- Nested folders (subfolders) -->
              <ol id="subfolder-<%= folder.id %>" class="subfolder-container" style="display: none;">
                <% folder.children.forEach(function(child) { %>
                  <li>
                    <!-- Only add toggle button if the child folder has its own subfolders -->
                    <% if (child.children && child.children.length > 0) { %>
                      <button class="toggle-btn" data-id="<%= child.id %>">+</button>
                    <% } %>
      
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M15 13.5H9m4.06-7.19-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z" />
                    </svg>
      
                    <a href="/folder/<%= folder.id %>/<%= child.id %>" class="folder-link" data-id="<%= child.id %>"><%= child.name %></a>
      
                    <% if (child.children && child.children.length > 0) { %>
                      <!-- Nested child subfolders -->
                      <ol id="subfolder-<%= child.id %>" class="subfolder-container" style="display: none;">
                        <% child.children.forEach(function(grandchild) { %>
                          <li>
                            <a href="/folder/<%= child.id %>/<%= grandchild.id %>" class="folder-link"><%= grandchild.name %></a>
                          </li>
                        <% }); %>
                      </ol>
                    <% } %>
                  </li>
                <% }); %>
              </ol>
            <% } %>
          </li>
        <% }); %>
      </ol>


    </nav>





    </div>

<div class="container2">


  <div id="file-preview" style="color: white; font-size: 1.1rem; font-family: Helvetica; display:none">
    <% if (previewObj.preview == true) { %>

    <div class="file-info">
      <button id="close-preview-btn" style="background-color: transparent; border: none; padding: 5px 10px; cursor: pointer;">
        <i class="fa-solid fa-x" style="color: #ffffff; font-size: 1.2rem"></i>
      </button>
      <div style="display:flex; flex-direction: row; gap: 1.2rem; align-items: center;">
        <p><%=previewObj.file.name%></p>
        <p> <%=previewObj.file.extention%> | <%=previewObj.file.size%> MB</p>
        <a target="_blank" href="<%=previewObj.file.url%>">
          <i f class="fa-solid fa-download" style="color: #ffffff; font-size: 1.5rem"></i>
        </a>
      </div>


    </div>

    <div class="file-content">
<% if (previewObj.type == "text")

                                { %>

      <p>

        <%- previewObj.file.content %>
      </p>

      <%
                            
                            } else if(previewObj.type == "image")
                            {

                                
                                %>

      <img style="width: 100%; position:fixeed;
  height: 100%;" src="<%=previewObj.file.url%>" alt="">



      <%}
                                
                                else if(previewObj.type == "pdf")
                                {

                                
                                
                                %>
      -->
      <iframe src="<%=previewObj.file.url%>" style="border: none;">
      </iframe>


      <%}%>


                            </div>

                          
                       
                    <% } %>

    </div>



        <div class="controls">
          <div class="search">
            <form action="/folder/<%=currentFolder%>" id="search-form">

              <div style="display:flex;background-color: #ffffff; justify-content: center; align-items: center; border: 1px solid #e0e0e0">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
                  <path strokeLinecap="round" strokeLinejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
                </svg>
                <input type="search" placeholder="" name="search" id="search">
              </div>

            </form>
          </div>
          <form id="upload" action="/upload/<%=folderPath%>" method="post" enctype="multipart/form-data">

            <div style="display: flex; padding: 0.5rem;">
              <label for="file-upload" class="custom-file-upload">
                <i style="font-size: 1rem" class="fa-solid fa-upload" style="color: #ffffff;"></i>
                Upload
              </label>
              <input id="file-upload" type="file" name="file" />
            </div>

          </form>




          <div>
            <dialog >
              <button class="close" autofocus><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M6 18 18 6M6 6l12 12" />
                </svg>
              </button>

              <div class="create-folder">

                <p style="font-weight: 600">New folder</p>
                <p style="color: #74747d">Enter a name for your new folder.</p>
              </div>

              <form id="create-folder-form" method="POST" action="/create-folder<%=folderPath%>">
                <label style="font-weight: 600" for="Name">Folder name</label>
                <input id="input-folder" type="text" placeholder="My folder" name="folderName">

                <div class="dialog-controls">
                  <button class="create-btn" type="submit" disabled>Create</button>
                  <button formmethod="dialog" type="button">Cancel</button>
                </div>
              </form>

            </dialog>
            <button id="create-folder">

              <i style="font-size: 1rem; margin-right: 5px" class="fa-regular fa-folder"></i>
              New Folder

            </button>
          </div>


        </div>
        
        <div class="sharing">
            <p><%=currentFolder.name%></p>
            <button class="share-btn" style="display:flex; justify-content: center; align-items: center; gap: 8px">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M7.217 10.907a2.25 2.25 0 1 0 0 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186 9.566-5.314m-9.566 7.5 9.566 5.314m0 0a2.25 2.25 0 1 0 3.935 2.186 2.25 2.25 0 0 0-3.935-2.186Zm0-12.814a2.25 2.25 0 1 0 3.933-2.185 2.25 2.25 0 0 0-3.933 2.185Z" />
                  </svg>
                Share folder</button>
        </div>
        <div class="files">
          <div class="file" style="border: none; background-color: #e0e0e0">
            <p>Name</p>
            <p>Type</p>
            <p>Size</p>
            <p>Date</p>
            <p>Action</p>
          </div>
          <% files.forEach(function(file) { %>
          <!-- Wrap the file item with an <a> tag for linking -->
          <a href="javascript:void(0);" class="file-link" data-id="<%= file.id %>" style="all: unset; width: 100%; display: block; background: none; text-decoration: none;">
            <div id="<%= file.id %>" class="file">

              <div style="display: flex; gap: 1rem; align-items: center;">
                <% if (file.extention.startsWith('image/')) { %>
                <img style="width: 5rem; height: 3rem;" src="<%= file.url %>" alt="Image preview">
                <% } else if (file.extention === 'application/pdf') { %>
                <i class="fa-regular fa-file-pdf" style="font-size: 3rem;"></i>
                <% } else if (file.extention === 'application/javascript' || file.extention.startsWith('text/') || ['application/json', 'text/html', 'text/css', 'text/x-c'].includes(file.extention)) { %>
                <i class="fa-solid fa-code" style="font-size: 3rem;"></i>
                <% } else { %>
                <i class="fa-solid fa-file" style="font-size: 3rem;"></i>
                <% } %>

                <p><%= file.name %></p>
              </div>
              <p><%= file.extention %></p>
              <p><%= file.size %> MB</p>
              <p><%= file.Date %></p>
              <form id="file-delete" action="" method="POST">              <button style="all:unset; cursor: pointer;" type="submit">
                <svg style="width: 2rem; height: 2rem; color:red" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
                  <path strokeLinecap="round" strokeLinejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                </svg>
                
              </button>
              </form>
              
            </div>
          </a>
          <% }); %>
        </div>



      </div>



    </div>

<dialog id="share" >
    <button class="close" id="close-share" autofocus><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
        <path strokeLinecap="round" strokeLinejoin="round" d="M6 18 18 6M6 6l12 12" />
      </svg>
    </button>

    <div>
        <div class="share-folder-info" style="display:flex; gap: 1rem; font-size: 1.125rem; align-items: center; font-weight: 600">
            <i class="fa-regular fa-folder"></i>
            <p>Share folder</p>
        </div>
        <p style="color:#a7a7ad; font-weight: 600; font-size: 0.9rem">Share "<%=currentFolder.name%>" - Set how long this folder will be accessible via the share link.</p>

        <div class="duration">
            
            <label for="expiry">Link expires in</label>
            <form id="expiryForm" style="display:flex; gap:1rem" >



                   <select id="expiry" name="expiry">
                       <option value="1-day">1 day</option>
                       <option value="7-days" selected>7 days</option>
                       <option value="30-days">30 days</option>
                       <option value="90-days">90 days</option>
                     </select>
                     
                     <button type="submit" id="generate">Generate</button>
                </form> 
        </div>

        <div class="link">
            <label for="link">Share link</label>
            <div style="display:flex; gap: 1rem">

                <input type="text" name="link" id="link-input" placeholder="URL..." disabled>
                <button class="copy">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
                        <path strokeLinecap="round" strokeLinejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
                      </svg>
                      
                </button>
            </div>
        </div>
    </div>
</dialog>
    



  </main>


</body>
<script>
  document.getElementById('file-upload').addEventListener('change', function() {
    // Get the form element
    const form = document.getElementById('upload');

    // Submit the form automatically
    form.submit();
  });
</script>



<script>
  const dialog = document.querySelector("dialog");
  const showButton = document.querySelector("dialog + button");
  const closeButton = document.querySelector("dialog button");

  

  // "Show the dialog" button opens the dialog modally
  showButton.addEventListener("click", () => {
    dialog.showModal();
  });

  // "Close" button closes the dialog
  closeButton.addEventListener("click", () => {
    dialog.close();
  });
</script>

<script>
    let shareButton = document.querySelector('.share-btn');
    let shareDialog = document.querySelector('#share');
    let closeShareBtn = document.querySelector('#close-share')
    shareButton.addEventListener('click', (e) => {
        shareDialog.showModal();
    })

    closeShareBtn.addEventListener("click", () => {
        shareDialog.close();
  });
</script>


<script>
  let input = document.querySelector('#input-folder');
  let createBtn = document.querySelector('.create-btn');
  console.log(createBtn);
  console.log(input);
  input.addEventListener('input', (e) => {
    console.log(input.value);
    if (input.value == "") {
      createBtn.disabled = true;
    } else {
      createBtn.disabled = false;
    }
  })
</script>


<script>
  const cancelButton = document.querySelector('.dialog-controls button[type="button"]');
  let dialogu = document.querySelector('dialog');

  cancelButton.addEventListener('click', () => {
    dialogu.close();
  });
</script>

<script src="https://kit.fontawesome.com/714a2a5688.js" crossorigin="anonymous"></script>



<script>
  // JavaScript to dynamically append 'preview' query parameter to the URL
  document.querySelectorAll('.file-link').forEach(link => {
    link.addEventListener('click', function() {
      const fileId = this.getAttribute('data-id');
      const currentUrl = window.location.href;
      const newUrl = new URL(currentUrl);
      console.log('newurl: ', newUrl)
      newUrl.searchParams.set('preview', fileId); // Append 'preview' query parameter with file.id

      // Redirect to the new URL with the 'preview' query
      window.location.href = newUrl.toString();
    });
  });
</script>




<script>
  const container = document.querySelector('.container2');
  const preview = document.getElementById('file-preview');

  // Check the URL for the "preview" query parameter
  const urlParams = new URLSearchParams(window.location.search);
  const previewQuery = urlParams.get('preview');
    // urlParams.delete('expiry')
  // If "preview" query exists in the URL, show the preview and adjust grid layout
  if (previewQuery !== null) {
    preview.style.display = 'block'; // Show the preview
    container.style.gridTemplateColumns = '1fr 3fr'; // Change layout to 1fr 3fr
  } else {
    preview.style.display = 'none'; // Hide the preview
    container.style.gridTemplateColumns = '1fr'; // Change layout to 1fr
  }

  const closePreviewBtn = document.getElementById('close-preview-btn');

  closePreviewBtn.addEventListener('click', (e) => {
    preview.style.display = 'none';
    container.style.gridTemplateColumns = '1fr';
  })
</script>


<script>
    let generateBtn = document.querySelector('#generate');
    let select = document.querySelector('select');

    generateBtn.addEventListener('click', (e) => {
        console.log(select.value);
    })
</script>


<script>
    const urlParameters = new URLSearchParams(window.location.search);

if (urlParams.has('expiry')) {
  console.log("Expiry parameter exists:", urlParams.get('expiry'));
  let expiry = urlParams.get('expiry');
  shareDialog.showModal();

} else {
  console.log("Expiry parameter does not exist");
}
</script>



<script>
document.addEventListener('DOMContentLoaded', function () {
  document.getElementById('expiryForm').addEventListener('submit', async function (event) {
    event.preventDefault(); // Prevent page reload

    // Get the selected value from the form
    const expiry = document.getElementById('expiry').value;

    try {
      // Send data to the backend
      const response = await fetch(`/share/folder<%=folderPath%>`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ expiry }), // Send expiry value
      });

      if (!response.ok) {
        throw new Error('Failed to fetch folder link');
      }

      // Handle response (assumes plain text)
      const folderLink = await response.json(); 
      console.log("hereeeeeeeeeeee", folderLink);

      // Update the input field with the link
      document.querySelector('#link-input').value = `localhost:<%=port%>/share/${folderLink.folderLink}`;
    } catch (error) {
      console.error('Error:', error);
    }
  });
});
</script>


<script>
  // Function to toggle visibility of subfolders
  document.addEventListener('DOMContentLoaded', function() {
    const toggleBtns = document.querySelectorAll('.toggle-btn');

    toggleBtns.forEach(btn => {
      btn.addEventListener('click', function(event) {
        // Prevent page refresh when the button is clicked
        event.preventDefault();

        const folderId = event.target.getAttribute('data-id');
        const subfolderContainer = document.getElementById(`subfolder-${folderId}`);

        // Toggle visibility of the subfolder container
        if (subfolderContainer) {
          const isVisible = subfolderContainer.style.display !== 'none';
          subfolderContainer.style.display = isVisible ? 'none' : 'block';
          
          // Toggle button text
          btn.textContent = isVisible ? '+' : '-';
        }
      });
    });
  });
</script>

// script for deleting a file -> assign action for the submit form

<script>
  // Select all forms with the ID 'file-delete'
  let forms = document.querySelectorAll('#file-delete');
  console.log(forms)

  // Loop through each form and attach a submit event listener
  forms.forEach((form) => {
    form.addEventListener('submit', (e) => {
      e.preventDefault(); // Prevent default form submission
      // Dynamically assign the action based on the parent element's ID
      const parentId = form.parentNode.id; // Update this logic if needed
      console.log(parentId);
      if (parentId) {
        form.action = `/file/delete/${parentId}`;
        console.log(`Form action set to: ${form.action}`);
      } else {
        console.error('Parent ID not found. Action not set.');
      }
      form.submit();

      // Optionally, submit the form programmatically
      // form.submit();
    });
  });
</script>


</html>

